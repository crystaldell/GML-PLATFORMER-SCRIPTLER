<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_karakter_bekleme</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>s_karakter_bekleme</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Hız Değerleri
yer_cekimi = 0.4;
yatay_hiz = 0;
dikey_hiz = 0;
ziplama_hizi = 9;
hareket_hizi = 3;
image_speed = .2;
yuz = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Klayve girişi
sag = keyboard_check(vk_right);
sol = -keyboard_check(vk_left);
zipla = keyboard_check_pressed(vk_space);

// Girişe tepki
hareket_yonu = sol + sag;
if hareket_yonu != 0 {
    yuz = hareket_yonu;
}
yatay_hiz = hareket_yonu * hareket_hizi;
if (dikey_hiz &lt; 10) dikey_hiz += yer_cekimi;

if (place_meeting(x,y+1,o_kati))
{
    dikey_hiz = zipla * -ziplama_hizi
}

// yatay temas
if (place_meeting(x+yatay_hiz,y,o_kati))
{
    while(!place_meeting(x+sign(yatay_hiz),y,o_kati))
    {
        x += sign(yatay_hiz);
    }
    yatay_hiz = 0;
}
x += yatay_hiz;

// dikey temas
if (place_meeting(x,y+dikey_hiz,o_kati))
{
    while(!place_meeting(x,y+sign(dikey_hiz),o_kati))
    {
        y += sign(dikey_hiz);
    }
    dikey_hiz = 0;
}
y += dikey_hiz;

// sprite animasyonu

image_xscale = yuz;

if (place_meeting(x,y+1,o_kati)) {
    grounded = true;
} else {
    grounded = false
}

if (!grounded) {
    image_speed = 0;
    sprite_index = s_karakter_ziplama;
    if (y &gt; yprevious) {
        image_index = image_number-1;
    }
}
else {
    image_speed = .2;
    if yatay_hiz != 0 {
        sprite_index = s_karakter_yurume;
    } else {
        sprite_index = s_karakter_bekleme;
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
